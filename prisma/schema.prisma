// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}  

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}
model User {
id Int @id @default(autoincrement())
email String @unique
password String
name String
cart Cart?
role String @default("customer")
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Category {
 id Int @id @default(autoincrement())
 name String
 slug String @unique
 description String?
 imageUrl String?
 products Product[] 
 createdAt DateTime @default(now())
}

model Product{
  id Int @id @default(autoincrement())
  name String
  slug String @unique
  description String?
  imageUrl String?
  price          Float
  discountPrice  Float?
  categoryId     Int
  category Category @relation(fields : [categoryId], references : [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartItems CartItem[]
}

model Cart { 
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  items CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())
  cartId Int
  cart Cart @relation(fields: [cartId], references: [id],onDelete: Cascade)
  productId Int
  product Product @relation(fields: [productId], references: [id],onDelete: Cascade)
  quantity Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([cartId, productId])
}